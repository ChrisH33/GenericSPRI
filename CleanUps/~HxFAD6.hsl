 namespace _Method { #include "CheckCarrierPresenceAbsence.hs_" } 
 namespace _Method { #include "load_instructions.hs_" } 
 namespace _Method { #include "NTRDirectUse_WGSPCRXP.hs_" } 
 namespace _Method { #include "ASWStandard\\TraceLevel\\TraceLevel.hsl" } 
 namespace _Method { #include "HSLStrLib.hsl" } 
#include "GenericSPRI\\Layouts\\261B_Layout1.res"
/* {{ 2 "LibraryInsertLine" "" */ // }} ""
variable CarrierArray[];
variable intPlateCount;
global device ML_STAR ("GenericSPRI\\Layouts\\261B_Layout1.lay", "ML_STAR", hslTrue);
variable intInputVolume;
variable intNumberOfSourcePlates;
variable intBeadVolume;
variable intElutionVolume;
/* {{ 2 "VariableInsertLine" "" */ // }} ""
// {{ 2 "TemplateIncludeBlock" ""
 namespace _Method { #include "HSLMETEDLib.hs_" } 
 namespace _Method { #include "HSLMECCLib.hs_" } 
 namespace _Method { #include "HSLPTLLib.hsl" } 
 namespace _Method { #include "HSLSTCCLib.hs_" } 
// }} ""
// {{{ 2 "LocalSubmethodInclude" ""
 namespace _Method {  #include __filename__ ".sub"  } 
// }} ""
/* {{ 2 "ProcessInsertLine" "" */ // }} ""
// {{{ 5 "main" "Begin"
namespace _Method { method main(  ) void {
// }} ""
// {{ 5 "main" "InitLocals"
// }} ""
// {{ 2 "AutoInitBlock" ""
PTL::SetWashingStateDefault("RinseTime1", 5);
PTL::SetWashingStateDefault("SoakTime1", 5);
PTL::SetWashingStateDefault("FlowRate1", 11);
PTL::SetWashingStateDefault("RinseTime2", 0);
PTL::SetWashingStateDefault("SoakTime2", 0);
PTL::SetWashingStateDefault("FlowRate2", 11);
PTL::SetWashingStateDefault("DrainingTime", 10);
PTL::SetWashingStateDefault("StartWashLiquid", 0);
PTL::SetLoadingStateDefault("RecoveryOptionContinue", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionExclude", hslTrue);
PTL::SetLoadingStateDefault("RecoveryOptionDefault", 0);
PTL::SetLoadingStateDefault("KitLotCheckEnabled", hslFalse);
CHECKCARRIERPRESENCEABSENCE::_InitLibrary();
LOAD_INSTRUCTIONS::_InitLibrary();
NTRDIRECTUSE_WGSPCRXP::_InitLibrary();
::RegisterAbortHandler( "OnAbort");
// }} ""
// {{ 1 1 0 "decc4235_8b52_4ff3_ace1b07a267e8edd" "{F07B0071-8EFC-11d4-A3BA-002035848439}"

// }} ""
// {{ 2 1 0 "187ddb87_6b52_4908_b7ddbe74f19e17af" "ML_STAR:{1C0C0CB0-7C87-11D3-AD83-0004ACB1DCB2}"
{
	variable arrRetValues[];
	arrRetValues = ML_STAR._1C0C0CB0_7C87_11D3_AD83_0004ACB1DCB2("187ddb87_6b52_4908_b7ddbe74f19e17af"); // Initialize
}
// }} ""
// {{{ 3 1 0 "8616ac11_fbf1_4fe8_8b88f78aa92617bd" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
A_UserInput();
// }} ""
// {{{ 4 1 0 "b1a6cad2_b054_49c8_a12b137da9b5b845" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
B_LoadInstructions();
// }} ""
// {{ 5 1 0 "747e1afa_9304_40df_8167937c04a84dfd" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{ 6 1 0 "37269b5a_15e1_4dc7_99f3b16478974522" "{4900C1F7-0FB7-4033-8253-760BDB9354DC}"
CarrierArray.SetSize(0);
// }} ""
// {{ 7 1 0 "5ef45d78_28ec_42c7_ac3fca008c225de1" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
CarrierArray.AddAsLast(Translate("MFX_CAR_5NTR4_0001"));
// }} ""
// {{ 8 1 0 "77068048_0b68_432c_8a8ba73ad2d2d62c" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
CarrierArray.AddAsLast(Translate("MFX_CAR_5NTR4_0002"));
// }} ""
// {{ 9 1 0 "06e51a88_5359_4afa_be0547b814407910" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
CarrierArray.AddAsLast(Translate("MFX_CAR_5DWP_NestRB_0001"));
// }} ""
// {{ 10 1 0 "da127d77_70ef_4a15_8ad12b6d8ac87650" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
CarrierArray.AddAsLast(Translate("MFX_CAR_5DWP_NestRB_0002"));
// }} ""
// {{ 11 1 0 "8a86dbd1_cbe7_4705_8fe92ad0e0893dca" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
CarrierArray.AddAsLast(Translate("MFX_CAR_4DWP_NestRB_Tube_0001"));
// }} ""
// {{ 12 1 0 "ea58cfa1_dc22_40d3_9d06e84e8c87716a" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
CarrierArray.AddAsLast(Translate("RGT_CAR_5R60_A00_empty_0001"));
// }} ""
/* {{ 1 "" "0" */ if(0){  /* }} "" */
// {{ 13 1 0 "0ee60f98_d6fa_4be2_900ab3ff634698e9" "{F17B7626-27CB-47f1-8477-8C4158339A6D}"
CarrierArray.AddAsLast(Translate("SGC_MFX_CAR_HHSF30DWP_2DWP_NestRB_TipPark_0001"));
// }} ""
// {{{ 14 1 0 "a8a3cf84_579f_4a1d_bd329d8c47b06b36" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
CHECKCARRIERPRESENCEABSENCE::CheckCarriers(ML_STAR, CarrierArray);
// }} ""
/* {{ 1 "" "1" */ } /* }} "" */
// {{ 15 1 0 "747e1afa_9304_40df_8167937c04a84dfd" "{586C3429-F931-405f-9938-928E22C90BFA}"

// }} ""
// {{{ 16 1 0 "447fd34f_6da6_4f0a_b03f54363af77aad" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
B_AMPure_Cleanup(ML_STAR.PCR_Source1_Epp_TwinTec, ML_STAR.PCR_Source2_Epp_TwinTec, ML_STAR.Bind_Plate_1_Nunc_1ml, ML_STAR.Bind_Plate_2_Nunc_1ml, ML_STAR.Bind_Plate_1_on_magnet_Nunc_1ml, ML_STAR.Bind_Plate_2_on_magnet_Nunc_1ml, ML_STAR.Waste_Abgene, ML_STAR.PCR_XP_Destination1_Epp_TwinTec, ML_STAR.PCR_XP_Destination2_Epp_TwinTec);
// }} ""
// {{{ 17 1 0 "4c678703_3cbc_4595_a81929f6a7d10ecc" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
LOAD_INSTRUCTIONS::load_instructions(ML_STAR, ML_STAR.Load_inst_Dest_Plates, Translate("The program is now complete. Seal your cleaned-up plates"));
// }} ""
// {{{ 18 1 0 "998f1259_98b7_4c74_99d57242901b3683" "{7C4EF7A7-39BE-406a-897F-71F3A35B4093}"
LOAD_INSTRUCTIONS::load_instructions(ML_STAR, ML_STAR.NTR_TIP_RACK_STACK, Translate("Remove all empty NTR racks and clean down the deck"));
// }} ""
// {{ 2 "AutoExitBlock" ""
CHECKCARRIERPRESENCEABSENCE::_ExitLibrary();
LOAD_INSTRUCTIONS::_ExitLibrary();
NTRDIRECTUSE_WGSPCRXP::_ExitLibrary();
// }} ""
// {{{ 5 "main" "End"
} }
// }} ""
// $$author=ch33$$valid=0$$time=2025-03-17 15:59$$checksum=9116f83d$$length=083$$