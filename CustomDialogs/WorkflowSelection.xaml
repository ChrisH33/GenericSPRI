<Window Title="Workflow Selection" ResizeMode="NoResize" Background="#FFF2F4F6" Width="521" Height="313" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:hhcdf="clr-namespace:Hamilton.HxCustomDialog.Framework;assembly=Hamilton.HxCustomDialogCore" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Window.Resources>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox1" VariableName="arrAvailableWorkflows" x:Key="comboBox1.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="Out" PropertyName="SelectedIndex" ElementName="comboBox1" VariableName="intWorkflowIndex" x:Key="comboBox1.SelectedIndex" />
    <hhcdf:HxSound SoundFile="{x:Null}" x:Key="HxSoundResourceKey" />
    <hhcdf:HxTheme Value="Default" x:Key="HxThemeResourceKey" />
    <hhcdf:HxVariableBinding BindingMode="Out" PropertyName="ReturnValue" ElementName="" VariableName="rtnValue" x:Key="ReturnValue" />
  </Window.Resources>
  <Grid Background="#FFF2F4F6">
    <Grid.RowDefinitions>
      <RowDefinition Height="80" />
      <RowDefinition Height="*" />
      <RowDefinition Height="60" />
    </Grid.RowDefinitions>
    <Grid.Resources>
      <Style TargetType="hhcdf:HxButtonCtrl" x:Key="{x:Type hhcdf:HxButtonCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF232642</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontFamily">
          <Setter.Value>
            <FontFamily>Roboto</FontFamily>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <Border CornerRadius="10,10,10,10" Background="{TemplateBinding Panel.Background}" Name="Border">
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="UIElement.Opacity" TargetName="Border">
                    <Setter.Value>
                      <s:Double>0.9</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed">
                  <Setter Property="UIElement.Opacity" TargetName="Border">
                    <Setter.Value>
                      <s:Double>0.8</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxCheckBoxCtrl" x:Key="{x:Type hhcdf:HxCheckBoxCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontFamily">
          <Setter.Value>
            <FontFamily>Roboto</FontFamily>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF232642</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF232642</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <BulletDecorator VerticalAlignment="Top" Grid.Column="0">
                  <BulletDecorator.Bullet>
                    <Grid Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}">
                      <Border BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" BorderBrush="#FF232642">
                        <Grid>
                          <Rectangle RadiusX="5" RadiusY="5" Stretch="Fill" Fill="#FFFFFFFF" RenderTransformOrigin="0.5,0.5">
                            <Rectangle.RenderTransform>
                              <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                            </Rectangle.RenderTransform>
                          </Rectangle>
                          <Path Data="M19,3L5,3C3.9,3,3,3.9,3,5L3,19C3,20.1,3.9,21,5,21L19,21C20.1,21,21,20.1,21,19L21,5C21,3.9,20.1,3,19,3z M10.63,18.378L5.151,13.259 7.479,10.571 10.27,13.242 16.252,6.931 18.88,9.619z" Stretch="Fill" Fill="{TemplateBinding Panel.Background}" />
                        </Grid>
                      </Border>
                    </Grid>
                  </BulletDecorator.Bullet>
                </BulletDecorator>
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="5,-2,0,0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Top" Grid.Column="1" />
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxComboBoxCtrl" x:Key="{x:Type hhcdf:HxComboBoxCtrl}">
        <Style.Triggers>
          <Trigger Property="UIElement.IsEnabled">
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </Style.Triggers>
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.OverridesDefaultStyle">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
          <Setter.Value>
            <x:Static Member="ScrollBarVisibility.Auto" />
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
          <Setter.Value>
            <x:Static Member="ScrollBarVisibility.Auto" />
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.MinHeight">
          <Setter.Value>
            <s:Double>18</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
          <Setter.Value>
            <x:Static Member="VerticalAlignment.Center" />
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
              <Border BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Panel.Background}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder">
                <Grid>
                  <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ClickMode="Press" Name="ToggleButton" Focusable="False" Grid.Column="2">
                    <ToggleButton.Template>
                      <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                          </Grid.ColumnDefinitions>
                          <Border BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding Panel.Background}" Background="#00FFFFFF" Name="BorderToggle" Grid.ColumnSpan="2" />
                          <Border BorderThickness="0,0,0,0" CornerRadius="2,0,0,2" BorderBrush="#FFFFFFFF" Background="#FFFFFFFF" Name="BorderTextContent" Margin="0,0,0,0" Grid.Column="0" />
                          <Path Data="M0,0L0,2 4,6 8,2 8,0 4,4z" Fill="#FFFFFFFF" Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.RowSpan="3" />
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ToggleButton.IsChecked">
                            <Setter Property="UIElement.Opacity" TargetName="BorderToggle">
                              <Setter.Value>
                                <s:Double>0.9</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" TargetName="BorderToggle">
                              <Setter.Value>
                                <SolidColorBrush>#FF9FAAB0</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="BorderTextContent">
                              <Setter.Value>
                                <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="BorderTextContent">
                              <Setter.Value>
                                <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="BorderToggle">
                              <Setter.Value>
                                <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                              <Setter.Value>
                                <SolidColorBrush>#FF858080</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                              <Setter.Value>
                                <SolidColorBrush>#FF858080</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="Arrow">
                              <Setter.Value>
                                <SolidColorBrush>#FFD1CFCF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </ToggleButton.Template>
                  </ToggleButton>
                  <ContentPresenter Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" Name="ContentSite" Margin="8,2,26,2" HorizontalAlignment="Left" VerticalAlignment="Center" IsHitTestVisible="False" />
                  <TextBox Foreground="{TemplateBinding TextElement.Foreground}" Style="{x:Null}" Name="PART_EditableTextBox" Margin="4,0,26,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Hidden" IsHitTestVisible="False" Focusable="False" xml:space="preserve"><TextBox.Template><ControlTemplate TargetType="TextBox"><Border Background="#FFFFFFFF" Name="PART_ContentHost" Focusable="False" /></ControlTemplate></TextBox.Template></TextBox>
                  <Popup IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide" AllowsTransparency="True" Name="Popup" Focusable="False">
                    <Grid Name="DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" SnapsToDevicePixels="True">
                      <Border BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" BorderBrush="#FFD8DCE1" Background="#FFFFFFFF" Name="DropDownBorder" />
                      <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                      </ScrollViewer>
                    </Grid>
                  </Popup>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ItemsControl.HasItems">
                  <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder">
                    <Setter.Value>
                      <s:Double>95</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="OuterBorder">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background" TargetName="PART_EditableTextBox">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground" TargetName="PART_EditableTextBox">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping">
                  <Setter Property="ScrollViewer.CanContentScroll">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="Window.AllowsTransparency" SourceName="Popup">
                  <Setter Property="Border.CornerRadius" TargetName="DropDownBorder">
                    <Setter.Value>
                      <CornerRadius>4,4,4,4</CornerRadius>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Margin" TargetName="DropDownBorder">
                    <Setter.Value>
                      <Thickness>0,2,0,0</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ComboBox.IsEditable">
                  <Setter Property="KeyboardNavigation.IsTabStop">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox">
                    <Setter.Value>
                      <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Visibility" TargetName="ContentSite">
                    <Setter.Value>
                      <x:Static Member="Visibility.Hidden" />
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="UIElement.Opacity" TargetName="OuterBorder">
                    <Setter.Value>
                      <s:Double>0.9</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="UIElement.Opacity" TargetName="OuterBorder">
                    <Setter.Value>
                      <s:Double>0.9</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxGroupBoxCtrl" x:Key="{x:Type hhcdf:HxGroupBoxCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontFamily">
          <Setter.Value>
            <FontFamily>Roboto</FontFamily>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FFD3DFF2</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#FF232642</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="2" Color="#FFA0BDEA" Opacity="0.2" BlurRadius="6" />
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="GroupBox">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border BorderThickness="0,0,0,0" CornerRadius="4,4,0,0" Background="{TemplateBinding Border.BorderBrush}" Grid.Row="0">
                  <Label Foreground="#FF232642" Padding="2,2,2,2">
                    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" Margin="5,0,4,0" />
                  </Label>
                </Border>
                <Border BorderThickness="0,0,0,0" BorderBrush="#FF6691C2" Background="{TemplateBinding Panel.Background}" Grid.Row="1">
                  <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,4,4,4" />
                </Border>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxNumericUpDownCtrl" x:Key="{x:Type hhcdf:HxNumericUpDownCtrl}">
        <Style.Triggers>
          <Trigger Property="UIElement.IsEnabled">
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </Style.Triggers>
        <Style.Resources>
          <Style TargetType="RepeatButton" x:Key="{x:Type RepeatButton}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Panel.Background">
              <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderBrush">
              <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                  <Border BorderThickness="0,0,0,0" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="Border" />
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.2</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFBCB7B7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.7</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.CornerRadius" TargetName="Border">
                        <Setter.Value>
                          <CornerRadius>0,2,2,0</CornerRadius>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          <Style TargetType="TextBox" x:Key="{x:Type TextBox}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="UIElement.SnapsToDevicePixels">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.TabNavigation">
              <Setter.Value>
                <x:Static Member="KeyboardNavigationMode.None" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.FocusVisualStyle">
              <Setter.Value>
                <x:Null />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinHeight">
              <Setter.Value>
                <s:Double>15</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.FontSize">
              <Setter.Value>
                <s:Double>14</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="UIElement.AllowDrop">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF274C74</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="18" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.ColumnSpan="2" Grid.RowSpan="2">
                      <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="3,3,3,3" BorderBrush="#FFABBDDA" Background="#FFFFFFFF" Name="OuterGlow" Opacity="0" Grid.Column="2" Grid.RowSpan="2">
                        <Border.Effect>
                          <DropShadowEffect ShadowDepth="0" Color="#FF66C9FC" Opacity="0.7" BlurRadius="8" />
                        </Border.Effect>
                      </Border>
                    </Grid>
                    <Grid Grid.ColumnSpan="2" Grid.RowSpan="2">
                      <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="5,5,5,5" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="BorderMain" />
                    </Grid>
                    <Border BorderThickness="2,0,0,0" Padding="2,2,2,2" CornerRadius="3,0,0,3" BorderBrush="#FFFFFFFF" Background="#00FFFFFF" Name="Border" Margin="1,0,1,0" VerticalAlignment="Center" Grid.Column="0" Grid.RowSpan="2">
                      <ScrollViewer Name="PART_ContentHost" Margin="0,0,0,0" />
                    </Border>
                    <Border BorderThickness="0,0,0,0" CornerRadius="0,3,0,0" Background="{TemplateBinding Panel.Background}" Name="BorderUp" Grid.Column="1" Grid.Row="0" />
                    <Border BorderThickness="0,0,0,0" CornerRadius="0,0,5,0" Background="{TemplateBinding Panel.Background}" Name="BorderDown" Grid.Column="1" Grid.Row="1" />
                    <Path Data="M0,0L0,2 4,6 8,2 8,0 4,4z" Fill="#FFFFFFFF" Name="NumArrowDown" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                    <Path Data="M0,0L0,2 4,6 8,2 8,0 4,4z" Fill="#FFFFFFFF" Name="NumArrowUp" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="1" Grid.Row="0">
                      <Path.RenderTransform>
                        <RotateTransform Angle="180" />
                      </Path.RenderTransform>
                    </Path>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="PART_ContentHost">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsFocused">
                      <Setter Property="UIElement.Opacity" TargetName="OuterGlow">
                        <Setter.Value>
                          <s:Double>1</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxPathBrowseCtrl" x:Key="{x:Type hhcdf:HxPathBrowseCtrl}">
        <Style.Triggers>
          <Trigger Property="UIElement.IsEnabled">
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </Style.Triggers>
        <Style.Resources>
          <Style TargetType="Button" x:Key="{x:Type Button}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <Border BorderThickness="0,1,1,1" CornerRadius="0,3,3,0" BorderBrush="{Binding Path=Background, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=hhcdf:HxPathBrowseCtrl}}" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=hhcdf:HxPathBrowseCtrl}}" Name="Border">
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.8</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.7</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FF9FAAB0</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          <Style TargetType="TextBox" x:Key="{x:Type TextBox}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="UIElement.SnapsToDevicePixels">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.TabNavigation">
              <Setter.Value>
                <x:Static Member="KeyboardNavigationMode.None" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.FocusVisualStyle">
              <Setter.Value>
                <x:Null />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinHeight">
              <Setter.Value>
                <s:Double>15</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.FontSize">
              <Setter.Value>
                <s:Double>12</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="UIElement.AllowDrop">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF274C74</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="1" />
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="3,0,0,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="BorderMain" Grid.ColumnSpan="2" />
                    <Border BorderThickness="0,0,0,0" Padding="2,2,2,2" CornerRadius="3,0,0,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="Border" Margin="1,0,3,0" VerticalAlignment="Center" Grid.Column="0">
                      <ScrollViewer Name="PART_ContentHost" Margin="0,0,0,0" />
                    </Border>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="PART_ContentHost">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxRadioButtonCtrl" x:Key="{x:Type hhcdf:HxRadioButtonCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF3579BA</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="RadioButton">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <BulletDecorator Name="test" VerticalAlignment="Top" Grid.Column="0">
                  <BulletDecorator.Bullet>
                    <Grid Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}">
                      <Grid>
                        <Path Data="M316.907,450.638A80.898,73.544,0,1,1,155.111,450.638A80.898,73.544,0,1,1,316.907,450.638z" Stretch="Fill" Fill="#FFFFFFFF" Name="RadioMarkBg" />
                        <Path Data="M270.093,391.812C229.476,391.812 196.562,424.726 196.562,465.343 196.562,505.96 229.476,538.906 270.093,538.906 310.71,538.906 343.656,505.96 343.656,465.343 343.656,424.726 310.71,391.812 270.093,391.812z M270.093,438C285.196,438 297.468,450.241 297.468,465.343 297.468,480.446 285.196,492.718 270.093,492.718 254.991,492.718 242.75,480.446 242.75,465.343 242.75,450.241 254.991,438 270.093,438z" Stretch="Fill" Fill="{TemplateBinding Panel.Background}" Name="RadioMark" />
                        <Path Data="M316.907,450.638A80.898,73.544,0,1,1,155.111,450.638A80.898,73.544,0,1,1,316.907,450.638z" Stretch="Fill" Fill="#FFFFFFFF" Stroke="#FFDADADA" StrokeThickness="1" Name="RadioMarkBorder" />
                      </Grid>
                    </Grid>
                  </BulletDecorator.Bullet>
                </BulletDecorator>
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,-3,0,0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Top" Grid.Column="1" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBg">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMark">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Stroke" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed">
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF767676</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBg">
                    <Setter.Value>
                      <SolidColorBrush>#FFD6D6D6</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMark">
                    <Setter.Value>
                      <SolidColorBrush>#FFD6D6D6</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Stroke" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxTextBlockCtrl" x:Key="{x:Type hhcdf:HxTextBlockCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontFamily">
          <Setter.Value>
            <FontFamily>Roboto</FontFamily>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxTextBoxCtrl" x:Key="{x:Type hhcdf:HxTextBoxCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontFamily">
          <Setter.Value>
            <FontFamily>Roboto</FontFamily>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.OverridesDefaultStyle">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="KeyboardNavigation.TabNavigation">
          <Setter.Value>
            <x:Static Member="KeyboardNavigationMode.None" />
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.FocusVisualStyle">
          <Setter.Value>
            <x:Null />
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.MinHeight">
          <Setter.Value>
            <s:Double>15</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.AllowDrop">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="0" Color="#FF66C9FC" Opacity="0" BlurRadius="8" />
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="TextBoxBase">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="1" />
                </Grid.ColumnDefinitions>
                <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="BorderMain" Grid.ColumnSpan="2" />
                <Border BorderThickness="0,0,0,0" Padding="4,0,4,0" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="Border" Margin="1,0,3,0" VerticalAlignment="Center" Grid.Column="0">
                  <ScrollViewer Name="PART_ContentHost" Margin="0,0,0,0" />
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background" TargetName="BorderMain">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="BorderMain">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsFocused">
                  <Trigger.EnterActions>
                    <BeginStoryboard>
                      <Storyboard>
                        <Storyboard.Children>
                          <DoubleAnimation To="0.8" Duration="00:00:00.1000000" Storyboard.TargetProperty="(Effect).Opacity" />
                        </Storyboard.Children>
                      </Storyboard>
                    </BeginStoryboard>
                  </Trigger.EnterActions>
                  <Trigger.ExitActions>
                    <BeginStoryboard>
                      <Storyboard>
                        <Storyboard.Children>
                          <DoubleAnimation To="0" Duration="00:00:00.1000000" Storyboard.TargetProperty="(Effect).Opacity" />
                        </Storyboard.Children>
                      </Storyboard>
                    </BeginStoryboard>
                  </Trigger.ExitActions>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="ComboBoxItem" x:Key="{x:Type ComboBoxItem}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.OverridesDefaultStyle">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBoxItem">
              <Grid>
                <Border Padding="6,2,6,2" CornerRadius="3,3,3,3" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=Border}}" Name="Border" SnapsToDevicePixels="True" />
                <Border Padding="6,2,6,2" Background="#FFFFFFFF" Name="BorderContainer" SnapsToDevicePixels="True">
                  <Label Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=hhcdf:HxComboBoxCtrl}}" Name="ContentLabel">
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
                  </Label>
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ComboBoxItem.IsHighlighted">
                  <Setter Property="Panel.Background" TargetName="BorderContainer">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground" TargetName="ContentLabel">
                    <Setter.Value>
                      <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ComboBoxItem.IsHighlighted">
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="IFrameworkInputElement" x:Key="watermarkLabelStyle">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FFA0A0A0</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Opacity">
          <Setter.Value>
            <s:Double>0.8</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>12</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontStyle">
          <Setter.Value>
            <FontStyle>Italic</FontStyle>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Margin">
          <Setter.Value>
            <Thickness>8,4,4,4</Thickness>
          </Setter.Value>
        </Setter>
      </Style>
    </Grid.Resources>
    <Grid Background="#FF232642" Grid.Row="0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="215" />
      </Grid.ColumnDefinitions>
      <hhcdf:HxTextBlockCtrl Text="Generic Bead Clean-up" FontFamily="Roboto" FontStyle="Normal" FontWeight="Bold" FontSize="27" Foreground="#FFFFFFFF" TextWrapping="Wrap" Name="textHeader" Width="450" Height="30" Margin="10,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1" Grid.Column="0" />
      <hhcdf:HxTextBlockCtrl Text="Select workflow" FontFamily="Roboto" FontStyle="Normal" FontWeight="Normal" FontSize="20" Foreground="#FFFFFFFF" TextWrapping="Wrap" Name="textSubheader" Width="440" Height="25" Margin="20,50,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1" Grid.Column="0" />
      <hhcdf:HxImageCtrl Name="imageLogo" Width="190" Margin="0,0,7.5,0" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="1" Grid.Column="1">
        <hhcdf:HxImageCtrl.Source>
          <BitmapImage BaseUri="{x:Null}" UriSource="WorkflowSelection\WSI_White.png" CacheOption="OnLoad" />
        </hhcdf:HxImageCtrl.Source>
      </hhcdf:HxImageCtrl>
      <hhcdf:HxCanvasCtrl>
        <hhcdf:HxTextBlockCtrl Text="Pipeline Step:" FontFamily="Arial" FontSize="18" Foreground="#FF232642" TextAlignment="Center" TextWrapping="Wrap" Name="textBlock1" Width="512" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="0" Canvas.Top="105" />
        <hhcdf:HxComboBoxCtrl Text="how'd you manage that?" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox1" Width="253" Height="29" Opacity="1" Canvas.Left="133" Canvas.Top="140" hhcdf:HxToolTipCtrl.Description="Please select the workflow you'd like to run">
          <hhcdf:HxComboBoxCtrl.ToolTip>
            <hhcdf:HxToolTipCtrl />
          </hhcdf:HxComboBoxCtrl.ToolTip>
          <ComboBoxItem IsSelected="True">how'd you manage that?</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
      </hhcdf:HxCanvasCtrl>
    </Grid>
    <Grid Grid.Row="1">
      <hhcdf:HxCanvasCtrl />
    </Grid>
    <Grid Background="#FFF2F4F6" Grid.Row="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="65" />
      </Grid.RowDefinitions>
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Row="2">
        <hhcdf:HxButtonCtrl ClosesDialog="True" ReturnValue="2" IsCancel="True" FontSize="16" Name="btnCustomDialogCancel" Width="106" Height="36" Margin="0,0,0,10" Opacity="1">
          <hhcdf:HxButtonCtrl.Effect>
            <DropShadowEffect ShadowDepth="5" Opacity="0.5" BlurRadius="3" />
          </hhcdf:HxButtonCtrl.Effect>End Method</hhcdf:HxButtonCtrl>
        <hhcdf:HxButtonCtrl ClosesDialog="True" ReturnValue="1" ValidateOnClose="True" IsDefault="True" FontSize="19" FontWeight="Bold" Name="btnCustomDialogOK" Width="106" Height="36" Margin="15,0,20,10" Opacity="1" IsEnabled="True">
          <hhcdf:HxButtonCtrl.Effect>
            <DropShadowEffect ShadowDepth="5" Opacity="0.5" BlurRadius="3" />
          </hhcdf:HxButtonCtrl.Effect>Continue</hhcdf:HxButtonCtrl>
      </StackPanel>
    </Grid>
  </Grid>
</Window>
