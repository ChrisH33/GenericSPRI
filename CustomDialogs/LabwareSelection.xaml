<Window Title="Select Labware" ResizeMode="NoResize" Background="{x:Null}" Width="1330" Height="745" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:hhcdf="clr-namespace:Hamilton.HxCustomDialog.Framework;assembly=Hamilton.HxCustomDialogCore" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib">
  <Window.Resources>
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="IsChecked" ElementName="checkBox_SkipSteps" VariableName="_blnForceStep" x:Key="checkBox_SkipSteps.IsChecked" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_Bead" VariableName="o_arrPossibleLabware_Bead" x:Key="comboBox_Bead.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_Bead" VariableName="_intIndex_Bead" x:Key="comboBox_Bead.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_Bead.SelectionChanged" x:Key="comboBox_Bead.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_Bead" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="IsEnabled" ElementName="comboBox_Bind" VariableName="_blnBindVisible" x:Key="comboBox_Bind.IsEnabled" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_Bind" VariableName="o_arrPossibleLabware_Bind" x:Key="comboBox_Bind.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_Bind" VariableName="_intIndex_Bind" x:Key="comboBox_Bind.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_Bind.SelectionChanged" x:Key="comboBox_Bind.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_Bind" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_Dest" VariableName="o_arrPossibleLabware_Dest" x:Key="comboBox_Dest.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_Dest" VariableName="_intIndex_Dest" x:Key="comboBox_Dest.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_Dest.SelectionChanged" x:Key="comboBox_Dest.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_Dest" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_Elu" VariableName="o_arrPossibleLabware_Elu" x:Key="comboBox_Elu.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_Elu" VariableName="_intIndex_Elu" x:Key="comboBox_Elu.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_Elu.SelectionChanged" x:Key="comboBox_Elu.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_Elu" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_EtOH" VariableName="o_arrPossibleLabware_EtOH" x:Key="comboBox_EtOH.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_EtOH" VariableName="_intIndex_EtOH" x:Key="comboBox_EtOH.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_EtOH.SelectionChanged" x:Key="comboBox_EtOH.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_EtOH" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_Mag" VariableName="o_arrPossibleLabware_Mag" x:Key="comboBox_Mag.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_Mag" VariableName="_intIndex_Mag" x:Key="comboBox_Mag.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_Mag.SelectionChanged" x:Key="comboBox_Mag.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_Magnet" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_Src" VariableName="o_arrPossibleLabware_Src" x:Key="comboBox_Src.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_Src" VariableName="_intIndex_Src" x:Key="comboBox_Src.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_Src.SelectionChanged" x:Key="comboBox_Src.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_Src" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="ItemsSource" ElementName="comboBox_Waste" VariableName="o_arrPossibleLabware_Waste" x:Key="comboBox_Waste.ItemsSource" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="SelectedIndex" ElementName="comboBox_Waste" VariableName="_intIndex_Waste" x:Key="comboBox_Waste.SelectedIndex" />
    <hhcdf:HxEventTrigger EventPath="comboBox_Waste.SelectionChanged" x:Key="comboBox_Waste.SelectionChanged">
      <hhcdf:HxPropertySetter PropertyName="Source" ElementName="image_Waste" ValueType="Value" NewValue="icon_question" />
      <hhcdf:HxPropertySetter PropertyName="IsEnabled" ElementName="btnCustomDialogOK" ValueType="Value">
        <hhcdf:HxPropertySetter.NewValue>
          <s:Boolean>False</s:Boolean>
        </hhcdf:HxPropertySetter.NewValue>
      </hhcdf:HxPropertySetter>
    </hhcdf:HxEventTrigger>
    <hhcdf:HxSound SoundFile="{x:Null}" x:Key="HxSoundResourceKey" />
    <hhcdf:HxTheme Value="Default" x:Key="HxThemeResourceKey" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_Bead" VariableName="o_strLabware_Src" x:Key="image_Bead.Source" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="IsVisible" ElementName="image_Bind" VariableName="_blnBindVisible" x:Key="image_Bind.IsVisible" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_Bind" VariableName="o_strLabware_Bind" x:Key="image_Bind.Source" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_Dest" VariableName="o_strLabware_Dest" x:Key="image_Dest.Source" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_Elu" VariableName="o_strLabware_Elu" x:Key="image_Elu.Source" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_EtOH" VariableName="o_strLabware_EtOH" x:Key="image_EtOH.Source" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_Magnet" VariableName="o_strLabware_Mag" x:Key="image_Magnet.Source" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_Src" VariableName="o_strLabware_Src" x:Key="image_Src.Source" />
    <hhcdf:HxVariableBinding BindingMode="In" PropertyName="Source" ElementName="image_Waste" VariableName="o_strLabware_Waste" x:Key="image_Waste.Source" />
    <hhcdf:HxVariableBinding BindingMode="InOut" PropertyName="Value" ElementName="numeric1" VariableName="_intSourcePlateNumber" x:Key="numeric1.Value" />
    <hhcdf:HxVariableBinding BindingMode="Out" PropertyName="ReturnValue" ElementName="" VariableName="_rtnValue" x:Key="ReturnValue" />
  </Window.Resources>
  <Grid Background="#FFF2F4F6">
    <Grid.RowDefinitions>
      <RowDefinition Height="80" />
      <RowDefinition Height="*" />
      <RowDefinition Height="80" />
    </Grid.RowDefinitions>
    <Grid.Resources>
      <ControlTemplate TargetType="TextBox" x:Key="ComboBoxTextBox">
        <Border Background="#FFFFFFFF" Name="PART_ContentHost" Focusable="False" />
      </ControlTemplate>
      <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButton">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="20" />
          </Grid.ColumnDefinitions>
          <Border BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding Panel.Background}" Background="#00FFFFFF" Name="BorderToggle" Grid.ColumnSpan="2" />
          <Border BorderThickness="0,0,0,0" CornerRadius="2,0,0,2" BorderBrush="#FFFFFFFF" Background="#FFFFFFFF" Name="BorderTextContent" Margin="0,0,0,0" Grid.Column="0" />
          <Path Data="M0,0L0,2 4,6 8,2 8,0 4,4z" Fill="#FFFFFFFF" Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.RowSpan="3" />
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="UIElement.IsMouseOver">
            <Trigger.Value>
              <s:Boolean>True</s:Boolean>
            </Trigger.Value>
          </Trigger>
          <Trigger Property="ToggleButton.IsChecked">
            <Setter Property="UIElement.Opacity" TargetName="BorderToggle">
              <Setter.Value>
                <s:Double>0.9</s:Double>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>True</s:Boolean>
            </Trigger.Value>
          </Trigger>
          <Trigger Property="UIElement.IsEnabled">
            <Setter Property="Panel.Background" TargetName="BorderToggle">
              <Setter.Value>
                <SolidColorBrush>#FF9FAAB0</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Panel.Background" TargetName="BorderTextContent">
              <Setter.Value>
                <SolidColorBrush>#FFECE7E7</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderBrush" TargetName="BorderTextContent">
              <Setter.Value>
                <SolidColorBrush>#FFECE7E7</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderBrush" TargetName="BorderToggle">
              <Setter.Value>
                <SolidColorBrush>#FFABA9A9</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Shape.Fill" TargetName="Arrow">
              <Setter.Value>
                <SolidColorBrush>#FFD1CFCF</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </ControlTemplate.Triggers>
      </ControlTemplate>
      <Style TargetType="hhcdf:HxButtonCtrl" x:Key="{x:Type hhcdf:HxButtonCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="Button">
              <Border CornerRadius="4,4,4,4" Background="{TemplateBinding Panel.Background}" Name="Border">
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="UIElement.Opacity" TargetName="Border">
                    <Setter.Value>
                      <s:Double>0.9</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed">
                  <Setter Property="UIElement.Opacity" TargetName="Border">
                    <Setter.Value>
                      <s:Double>0.8</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF1A4977</SolidColorBrush>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxCheckBoxCtrl" x:Key="{x:Type hhcdf:HxCheckBoxCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF3579BA</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <BulletDecorator Name="test" VerticalAlignment="Top" Grid.Column="0">
                  <BulletDecorator.Bullet>
                    <Grid Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}">
                      <Border BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" BorderBrush="#FFD8DCE1">
                        <Grid>
                          <Rectangle RadiusX="5" RadiusY="5" Stretch="Fill" Fill="#FFFFFFFF" Name="CheckMarkBg">
                            <Rectangle.RenderTransform>
                              <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                            </Rectangle.RenderTransform>
                          </Rectangle>
                          <Path Data="M19,3L5,3C3.9,3,3,3.9,3,5L3,19C3,20.1,3.9,21,5,21L19,21C20.1,21,21,20.1,21,19L21,5C21,3.9,20.1,3,19,3z M10.63,18.378L5.151,13.259 7.479,10.571 10.27,13.242 16.252,6.931 18.88,9.619z" Stretch="Fill" Fill="{TemplateBinding Panel.Background}" Name="CheckMark" />
                        </Grid>
                      </Border>
                    </Grid>
                  </BulletDecorator.Bullet>
                </BulletDecorator>
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,-3,0,0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Top" Grid.Column="1" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="Shape.Fill" TargetName="CheckMark">
                    <Setter.Value>
                      <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="CheckMarkBg">
                    <Setter.Value>
                      <SolidColorBrush>#2E3B87FF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed">
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF767676</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="CheckMarkBg">
                    <Setter.Value>
                      <SolidColorBrush>#FFD6D6D6</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="CheckMark">
                    <Setter.Value>
                      <SolidColorBrush>#FFD6D6D6</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxComboBoxCtrl" x:Key="{x:Type hhcdf:HxComboBoxCtrl}">
        <Style.Triggers>
          <Trigger Property="UIElement.IsEnabled">
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </Style.Triggers>
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.OverridesDefaultStyle">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
          <Setter.Value>
            <x:Static Member="ScrollBarVisibility.Auto" />
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
          <Setter.Value>
            <x:Static Member="ScrollBarVisibility.Auto" />
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="ScrollViewer.CanContentScroll">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.MinHeight">
          <Setter.Value>
            <s:Double>18</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
          <Setter.Value>
            <x:Static Member="VerticalAlignment.Center" />
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
              <Border BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Panel.Background}" Background="{TemplateBinding Panel.Background}" Name="OuterBorder">
                <Grid>
                  <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" ClickMode="Press" Name="ToggleButton" Focusable="False" Grid.Column="2">
                    <ToggleButton.Template>
                      <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                          </Grid.ColumnDefinitions>
                          <Border BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" BorderBrush="{TemplateBinding Panel.Background}" Background="#00FFFFFF" Name="BorderToggle" Grid.ColumnSpan="2" />
                          <Border BorderThickness="0,0,0,0" CornerRadius="2,0,0,2" BorderBrush="#FFFFFFFF" Background="#FFFFFFFF" Name="BorderTextContent" Margin="0,0,0,0" Grid.Column="0" />
                          <Path Data="M0,0L0,2 4,6 8,2 8,0 4,4z" Fill="#FFFFFFFF" Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.RowSpan="3" />
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="ToggleButton.IsChecked">
                            <Setter Property="UIElement.Opacity" TargetName="BorderToggle">
                              <Setter.Value>
                                <s:Double>0.9</s:Double>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Panel.Background" TargetName="BorderToggle">
                              <Setter.Value>
                                <SolidColorBrush>#FF9FAAB0</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="BorderTextContent">
                              <Setter.Value>
                                <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="BorderTextContent">
                              <Setter.Value>
                                <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="BorderToggle">
                              <Setter.Value>
                                <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                              <Setter.Value>
                                <SolidColorBrush>#FF858080</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                              <Setter.Value>
                                <SolidColorBrush>#FF858080</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Shape.Fill" TargetName="Arrow">
                              <Setter.Value>
                                <SolidColorBrush>#FFD1CFCF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </ToggleButton.Template>
                  </ToggleButton>
                  <ContentPresenter Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" Name="ContentSite" Margin="8,2,26,2" HorizontalAlignment="Left" VerticalAlignment="Center" IsHitTestVisible="False" />
                  <TextBox Foreground="{TemplateBinding TextElement.Foreground}" Style="{x:Null}" Name="PART_EditableTextBox" Margin="4,0,26,0" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Hidden" IsHitTestVisible="False" Focusable="False" xml:space="preserve"><TextBox.Template><ControlTemplate TargetType="TextBox"><Border Background="#FFFFFFFF" Name="PART_ContentHost" Focusable="False" /></ControlTemplate></TextBox.Template></TextBox>
                  <Popup IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}" Placement="Bottom" PopupAnimation="Slide" AllowsTransparency="True" Name="Popup" Focusable="False">
                    <Grid Name="DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" SnapsToDevicePixels="True">
                      <Border BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" BorderBrush="#FFD8DCE1" Background="#FFFFFFFF" Name="DropDownBorder" />
                      <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                      </ScrollViewer>
                    </Grid>
                  </Popup>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ItemsControl.HasItems">
                  <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder">
                    <Setter.Value>
                      <s:Double>95</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="OuterBorder">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background" TargetName="PART_EditableTextBox">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground" TargetName="PART_EditableTextBox">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping">
                  <Setter Property="ScrollViewer.CanContentScroll">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="Window.AllowsTransparency" SourceName="Popup">
                  <Setter Property="Border.CornerRadius" TargetName="DropDownBorder">
                    <Setter.Value>
                      <CornerRadius>4,4,4,4</CornerRadius>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Margin" TargetName="DropDownBorder">
                    <Setter.Value>
                      <Thickness>0,2,0,0</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ComboBox.IsEditable">
                  <Setter Property="KeyboardNavigation.IsTabStop">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox">
                    <Setter.Value>
                      <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Visibility" TargetName="ContentSite">
                    <Setter.Value>
                      <x:Static Member="Visibility.Hidden" />
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="UIElement.Opacity" TargetName="OuterBorder">
                    <Setter.Value>
                      <s:Double>0.9</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="UIElement.Opacity" TargetName="OuterBorder">
                    <Setter.Value>
                      <s:Double>0.9</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxGroupBoxCtrl" x:Key="{x:Type hhcdf:HxGroupBoxCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>13</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FFD3DFF2</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#FF2B6094</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="2" Color="#FFA0BDEA" Opacity="0.2" BlurRadius="6" />
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="GroupBox">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto" />
                  <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Border BorderThickness="0,0,0,0" CornerRadius="4,4,0,0" Background="{TemplateBinding Border.BorderBrush}" Grid.Row="0">
                  <Label Foreground="#FFD9E2F2" Padding="2,2,2,2">
                    <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" ContentSource="Header" Margin="5,0,4,0" />
                  </Label>
                </Border>
                <Border BorderThickness="0,0,0,0" BorderBrush="#FF6691C2" Background="{TemplateBinding Panel.Background}" Grid.Row="1">
                  <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,4,4,4" />
                </Border>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxNumericUpDownCtrl" x:Key="{x:Type hhcdf:HxNumericUpDownCtrl}">
        <Style.Triggers>
          <Trigger Property="UIElement.IsEnabled">
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </Style.Triggers>
        <Style.Resources>
          <Style TargetType="RepeatButton" x:Key="{x:Type RepeatButton}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Panel.Background">
              <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Border.BorderBrush">
              <Setter.Value>
                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                  <Border BorderThickness="0,0,0,0" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Name="Border" />
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.2</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFBCB7B7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.7</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.CornerRadius" TargetName="Border">
                        <Setter.Value>
                          <CornerRadius>0,2,2,0</CornerRadius>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          <Style TargetType="TextBox" x:Key="{x:Type TextBox}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="UIElement.SnapsToDevicePixels">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.TabNavigation">
              <Setter.Value>
                <x:Static Member="KeyboardNavigationMode.None" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.FocusVisualStyle">
              <Setter.Value>
                <x:Null />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinHeight">
              <Setter.Value>
                <s:Double>15</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.FontSize">
              <Setter.Value>
                <s:Double>14</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="UIElement.AllowDrop">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF274C74</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="18" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*" />
                      <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.ColumnSpan="2" Grid.RowSpan="2">
                      <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="3,3,3,3" BorderBrush="#FFABBDDA" Background="#FFFFFFFF" Name="OuterGlow" Opacity="0" Grid.Column="2" Grid.RowSpan="2">
                        <Border.Effect>
                          <DropShadowEffect ShadowDepth="0" Color="#FF66C9FC" Opacity="0.7" BlurRadius="8" />
                        </Border.Effect>
                      </Border>
                    </Grid>
                    <Grid Grid.ColumnSpan="2" Grid.RowSpan="2">
                      <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="5,5,5,5" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="BorderMain" />
                    </Grid>
                    <Border BorderThickness="2,0,0,0" Padding="2,2,2,2" CornerRadius="3,0,0,3" BorderBrush="#FFFFFFFF" Background="#00FFFFFF" Name="Border" Margin="1,0,1,0" VerticalAlignment="Center" Grid.Column="0" Grid.RowSpan="2">
                      <ScrollViewer Name="PART_ContentHost" Margin="0,0,0,0" />
                    </Border>
                    <Border BorderThickness="0,0,0,0" CornerRadius="0,3,0,0" Background="{TemplateBinding Panel.Background}" Name="BorderUp" Grid.Column="1" Grid.Row="0" />
                    <Border BorderThickness="0,0,0,0" CornerRadius="0,0,5,0" Background="{TemplateBinding Panel.Background}" Name="BorderDown" Grid.Column="1" Grid.Row="1" />
                    <Path Data="M0,0L0,2 4,6 8,2 8,0 4,4z" Fill="#FFFFFFFF" Name="NumArrowDown" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1" />
                    <Path Data="M0,0L0,2 4,6 8,2 8,0 4,4z" Fill="#FFFFFFFF" Name="NumArrowUp" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="1" Grid.Row="0">
                      <Path.RenderTransform>
                        <RotateTransform Angle="180" />
                      </Path.RenderTransform>
                    </Path>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="PART_ContentHost">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsFocused">
                      <Setter Property="UIElement.Opacity" TargetName="OuterGlow">
                        <Setter.Value>
                          <s:Double>1</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxPathBrowseCtrl" x:Key="{x:Type hhcdf:HxPathBrowseCtrl}">
        <Style.Triggers>
          <Trigger Property="UIElement.IsEnabled">
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF858080</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Trigger.Value>
              <s:Boolean>False</s:Boolean>
            </Trigger.Value>
          </Trigger>
        </Style.Triggers>
        <Style.Resources>
          <Style TargetType="Button" x:Key="{x:Type Button}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <Border BorderThickness="0,1,1,1" CornerRadius="0,3,3,0" BorderBrush="{Binding Path=Background, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=hhcdf:HxPathBrowseCtrl}}" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=hhcdf:HxPathBrowseCtrl}}" Name="Border">
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.8</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="UIElement.Opacity" TargetName="Border">
                        <Setter.Value>
                          <s:Double>0.7</s:Double>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FF9FAAB0</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          <Style TargetType="TextBox" x:Key="{x:Type TextBox}">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="UIElement.SnapsToDevicePixels">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.TabNavigation">
              <Setter.Value>
                <x:Static Member="KeyboardNavigationMode.None" />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.FocusVisualStyle">
              <Setter.Value>
                <x:Null />
              </Setter.Value>
            </Setter>
            <Setter Property="FrameworkElement.MinHeight">
              <Setter.Value>
                <s:Double>15</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.FontSize">
              <Setter.Value>
                <s:Double>12</s:Double>
              </Setter.Value>
            </Setter>
            <Setter Property="UIElement.AllowDrop">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="TextElement.Foreground">
              <Setter.Value>
                <SolidColorBrush>#FF274C74</SolidColorBrush>
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="1" />
                    </Grid.ColumnDefinitions>
                    <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="3,0,0,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="BorderMain" Grid.ColumnSpan="2" />
                    <Border BorderThickness="0,0,0,0" Padding="2,2,2,2" CornerRadius="3,0,0,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="Border" Margin="1,0,3,0" VerticalAlignment="Center" Grid.Column="0">
                      <ScrollViewer Name="PART_ContentHost" Margin="0,0,0,0" />
                    </Border>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Panel.Background" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="Border">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="BorderMain">
                        <Setter.Value>
                          <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="TextElement.Foreground" TargetName="PART_ContentHost">
                        <Setter.Value>
                          <SolidColorBrush>#FF858080</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxRadioButtonCtrl" x:Key="{x:Type hhcdf:HxRadioButtonCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF3579BA</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="RadioButton">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <BulletDecorator Name="test" VerticalAlignment="Top" Grid.Column="0">
                  <BulletDecorator.Bullet>
                    <Grid Width="{TemplateBinding TextElement.FontSize}" Height="{TemplateBinding TextElement.FontSize}">
                      <Grid>
                        <Path Data="M316.907,450.638A80.898,73.544,0,1,1,155.111,450.638A80.898,73.544,0,1,1,316.907,450.638z" Stretch="Fill" Fill="#FFFFFFFF" Name="RadioMarkBg" />
                        <Path Data="M270.093,391.812C229.476,391.812 196.562,424.726 196.562,465.343 196.562,505.96 229.476,538.906 270.093,538.906 310.71,538.906 343.656,505.96 343.656,465.343 343.656,424.726 310.71,391.812 270.093,391.812z M270.093,438C285.196,438 297.468,450.241 297.468,465.343 297.468,480.446 285.196,492.718 270.093,492.718 254.991,492.718 242.75,480.446 242.75,465.343 242.75,450.241 254.991,438 270.093,438z" Stretch="Fill" Fill="{TemplateBinding Panel.Background}" Name="RadioMark" />
                        <Path Data="M316.907,450.638A80.898,73.544,0,1,1,155.111,450.638A80.898,73.544,0,1,1,316.907,450.638z" Stretch="Fill" Fill="#FFFFFFFF" Stroke="#FFDADADA" StrokeThickness="1" Name="RadioMarkBorder" />
                      </Grid>
                    </Grid>
                  </BulletDecorator.Bullet>
                </BulletDecorator>
                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="4,-3,0,0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Top" Grid.Column="1" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBg">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMark">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked">
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Stroke" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver">
                  <Setter Property="FrameworkElement.Cursor">
                    <Setter.Value>
                      <Cursor>Hand</Cursor>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed">
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF767676</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBg">
                    <Setter.Value>
                      <SolidColorBrush>#FFD6D6D6</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMark">
                    <Setter.Value>
                      <SolidColorBrush>#FFD6D6D6</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Fill" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Shape.Stroke" TargetName="RadioMarkBorder">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxTextBlockCtrl" x:Key="{x:Type hhcdf:HxTextBlockCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="hhcdf:HxTextBoxCtrl" x:Key="{x:Type hhcdf:HxTextBoxCtrl}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.OverridesDefaultStyle">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="KeyboardNavigation.TabNavigation">
          <Setter.Value>
            <x:Static Member="KeyboardNavigationMode.None" />
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.FocusVisualStyle">
          <Setter.Value>
            <x:Null />
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.MinHeight">
          <Setter.Value>
            <s:Double>15</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>14</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.AllowDrop">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF274C74</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF6B91BF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect ShadowDepth="0" Color="#FF66C9FC" Opacity="0" BlurRadius="8" />
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="TextBoxBase">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="1" />
                </Grid.ColumnDefinitions>
                <Border BorderThickness="1,1,1,1" Padding="2,2,2,2" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="BorderMain" Grid.ColumnSpan="2" />
                <Border BorderThickness="0,0,0,0" Padding="4,0,4,0" CornerRadius="3,3,3,3" BorderBrush="{TemplateBinding Panel.Background}" Background="#FFFFFFFF" Name="Border" Margin="1,0,3,0" VerticalAlignment="Center" Grid.Column="0">
                  <ScrollViewer Name="PART_ContentHost" Margin="0,0,0,0" />
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Panel.Background" TargetName="BorderMain">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="BorderMain">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsFocused">
                  <Trigger.EnterActions>
                    <BeginStoryboard>
                      <Storyboard>
                        <Storyboard.Children>
                          <DoubleAnimation To="0.8" Duration="00:00:00.1000000" Storyboard.TargetProperty="(Effect).Opacity" />
                        </Storyboard.Children>
                      </Storyboard>
                    </BeginStoryboard>
                  </Trigger.EnterActions>
                  <Trigger.ExitActions>
                    <BeginStoryboard>
                      <Storyboard>
                        <Storyboard.Children>
                          <DoubleAnimation To="0" Duration="00:00:00.1000000" Storyboard.TargetProperty="(Effect).Opacity" />
                        </Storyboard.Children>
                      </Storyboard>
                    </BeginStoryboard>
                  </Trigger.ExitActions>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="ComboBoxItem" x:Key="{x:Type ComboBoxItem}">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="UIElement.SnapsToDevicePixels">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.OverridesDefaultStyle">
          <Setter.Value>
            <s:Boolean>True</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBoxItem">
              <Grid>
                <Border Padding="6,2,6,2" CornerRadius="3,3,3,3" Background="{Binding Path=Background, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=Border}}" Name="Border" SnapsToDevicePixels="True" />
                <Border Padding="6,2,6,2" Background="#FFFFFFFF" Name="BorderContainer" SnapsToDevicePixels="True">
                  <Label Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorLevel=1, Mode=FindAncestor, AncestorType=hhcdf:HxComboBoxCtrl}}" Name="ContentLabel">
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" />
                  </Label>
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ComboBoxItem.IsHighlighted">
                  <Setter Property="Panel.Background" TargetName="BorderContainer">
                    <Setter.Value>
                      <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground" TargetName="ContentLabel">
                    <Setter.Value>
                      <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ComboBoxItem.IsHighlighted">
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="Panel.Background" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFECE7E7</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Border.BorderBrush" TargetName="Border">
                    <Setter.Value>
                      <SolidColorBrush>#FFABA9A9</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF858080</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style TargetType="IFrameworkInputElement" x:Key="watermarkLabelStyle">
        <Style.Resources>
          <ResourceDictionary />
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FFA0A0A0</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="UIElement.Opacity">
          <Setter.Value>
            <s:Double>0.8</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontSize">
          <Setter.Value>
            <s:Double>12</s:Double>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.FontStyle">
          <Setter.Value>
            <FontStyle>Italic</FontStyle>
          </Setter.Value>
        </Setter>
        <Setter Property="FrameworkElement.Margin">
          <Setter.Value>
            <Thickness>8,4,4,4</Thickness>
          </Setter.Value>
        </Setter>
      </Style>
    </Grid.Resources>
    <Grid Background="#FF232642" Grid.Row="0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="180" />
      </Grid.ColumnDefinitions>
      <hhcdf:HxTextBlockCtrl Text="Generic Bead Clean-up" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="30" Foreground="#FFFFFFFF" TextWrapping="Wrap" Name="textHeader" Width="400" Height="40" Margin="10,8,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Opacity="1" />
      <hhcdf:HxTextBlockCtrl Text="Labware Selection" FontFamily="Arial" FontStyle="Normal" FontSize="21" Foreground="#FFFFFFFF" TextWrapping="Wrap" Name="textSubHeader" Width="300" Height="30" Margin="32,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="1" />
      <hhcdf:HxImageCtrl Name="imgWSILogo" Width="162.5891" Height="55.9" Margin="0,0,10,0" HorizontalAlignment="Right" VerticalAlignment="Center" Opacity="1" Grid.Column="1">
        <hhcdf:HxImageCtrl.Source>
          <BitmapImage BaseUri="{x:Null}" UriSource="LabwareSelection\WSI_White.png" CacheOption="OnLoad" />
        </hhcdf:HxImageCtrl.Source>
      </hhcdf:HxImageCtrl>
      <hhcdf:HxCanvasCtrl>
        <hhcdf:HxGroupBoxCtrl BorderBrush="#FF232642" Background="#FFB2C9D3" FontFamily="Arial" FontSize="21" FontStyle="Normal" FontWeight="Bold" Name="groupBox_Other" Width="260" Height="170" Opacity="1" Canvas.Left="825" Canvas.Top="410">
          <hhcdf:HxGroupBoxCtrl.Header>
            <TextBlock Text="Other" />
          </hhcdf:HxGroupBoxCtrl.Header>
        </hhcdf:HxGroupBoxCtrl>
        <hhcdf:HxGroupBoxCtrl BorderBrush="#FF232642" Background="#FFB2C9D3" FontFamily="Arial" FontSize="21" FontStyle="Normal" FontWeight="Bold" Name="groupBox_Reagent" Width="1275" Height="280" Opacity="1" Canvas.Left="25" Canvas.Top="105">
          <hhcdf:HxGroupBoxCtrl.Header>
            <TextBlock Text="Reagent Reservoirs" />
          </hhcdf:HxGroupBoxCtrl.Header>
        </hhcdf:HxGroupBoxCtrl>
        <hhcdf:HxGroupBoxCtrl BorderBrush="#FF232642" Background="#FFB2C9D3" FontFamily="Arial" FontSize="21" FontStyle="Normal" FontWeight="Bold" Name="groupBox_Labware" Width="775" Height="280" Opacity="1" Canvas.Left="25" Canvas.Top="410">
          <hhcdf:HxGroupBoxCtrl.Header>
            <TextBlock Text="Sample Labware" />
          </hhcdf:HxGroupBoxCtrl.Header>
        </hhcdf:HxGroupBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_Src" Width="200" Height="29" Opacity="1" Canvas.Left="62.5" Canvas.Top="650">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
          <ComboBoxItem>temp2</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_Bind" Width="200" Height="29" Opacity="1" IsEnabled="True" Canvas.Left="312.5" Canvas.Top="650">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_Dest" Width="200" Height="29" Opacity="1" Canvas.Left="562.5" Canvas.Top="650">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_Bead" Width="200" Height="29" Opacity="1" Canvas.Left="62.5" Canvas.Top="345">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_EtOH" Width="200" Height="29" Opacity="1" Canvas.Left="312.5" Canvas.Top="345">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_Mag" Width="200" Height="29" Opacity="1" Canvas.Left="1062.5" Canvas.Top="345">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_Elu" Width="200" Height="29" Opacity="1" Canvas.Left="562.5" Canvas.Top="345">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxComboBoxCtrl Text="temp" IsReadOnly="True" Background="#FF232642" FontFamily="Arial" FontSize="14" Name="comboBox_Waste" Width="200" Height="29" Opacity="1" Canvas.Left="812.5" Canvas.Top="345">
          <ComboBoxItem IsSelected="True">temp</ComboBoxItem>
        </hhcdf:HxComboBoxCtrl>
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_Bead" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="50" Canvas.Top="160" />
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_EtOH" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="300" Canvas.Top="160" />
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_Elu" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="550" Canvas.Top="160" />
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_Waste" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="800" Canvas.Top="160" />
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_Magnet" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="1050" Canvas.Top="160" />
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_Dest" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="550" Canvas.Top="465" />
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_Bind" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="300" Canvas.Top="465" />
        <hhcdf:HxImageCtrl Source="pack://application:,,,/Hamilton.HxCustomDialogCore;component/Resources/Images/icon_question.png" Stretch="Fill" Name="image_Src" Width="225" Height="150" Opacity="1" Effect="{x:Null}" Canvas.Left="50" Canvas.Top="465" />
        <hhcdf:HxTextBlockCtrl Text="Beads:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock8" Width="120" Height="20" Margin="3,3,3,3" Opacity="1" Canvas.Left="50" Canvas.Top="315" />
        <hhcdf:HxTextBlockCtrl Text="Ethanol:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock7" Width="120" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="300" Canvas.Top="315" />
        <hhcdf:HxTextBlockCtrl Text="Elution:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock6" Width="120" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="550" Canvas.Top="315" />
        <hhcdf:HxTextBlockCtrl Text="Waste:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock5" Width="120" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="800" Canvas.Top="315" />
        <hhcdf:HxTextBlockCtrl Text="Source:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock2" Width="120" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="50" Canvas.Top="620" />
        <hhcdf:HxTextBlockCtrl Text="Bind:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock3" Width="120" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="300" Canvas.Top="620" />
        <hhcdf:HxTextBlockCtrl Text="Magnet:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock14" Width="120" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="1050" Canvas.Top="315" />
        <hhcdf:HxTextBlockCtrl Text="Destination:" FontFamily="Arial" FontStyle="Normal" FontWeight="Bold" FontSize="16" TextWrapping="Wrap" Name="textBlock4" Width="120" Height="22" Margin="3,3,3,3" Opacity="1" Canvas.Left="550" Canvas.Top="620" />
        <hhcdf:HxTextBlockCtrl Text="Plate Number" FontFamily="Arial" FontSize="16" TextWrapping="Wrap" Name="textBlock1" Width="150" Height="20" Margin="3,3,3,3" Opacity="1" Canvas.Left="905" Canvas.Top="465" />
        <hhcdf:HxTextBlockCtrl Text="Skip steps" FontFamily="Arial" FontSize="16" TextWrapping="Wrap" Name="textBlock9" Width="150" Height="20" Margin="3,3,3,3" Opacity="1" Canvas.Left="905" Canvas.Top="500" />
        <hhcdf:HxTextBlockCtrl Text="Advanced Settings" FontFamily="Arial" FontSize="16" TextWrapping="Wrap" Name="textBlock13" Width="150" Height="20" Margin="3,3,3,3" Opacity="1" Canvas.Left="905" Canvas.Top="535" />
        <hhcdf:HxNumericUpDownCtrl Maximum="2" MaximumText="2" Minimum="1" MinimumText="1" Value="1" ValueString="1" Background="#FF232642" Name="numeric1" Width="50" Height="25" Opacity="1" Canvas.Left="850" Canvas.Top="465" hhcdf:HxToolTipCtrl.ShowMinMax="True" />
        <hhcdf:HxCheckBoxCtrl Background="#FF232642" Foreground="{x:Null}" FontFamily="Arial" FontSize="21" Name="checkBox_SkipSteps" Width="20" Height="20" Margin="3,3,3,3" Opacity="1" Canvas.Left="865" Canvas.Top="500" />
        <hhcdf:HxCheckBoxCtrl Background="#FF232642" Foreground="{x:Null}" FontFamily="Arial" FontSize="21" Name="checkBox_AdvancedSettings" Width="20" Height="20" Margin="3,3,3,3" Opacity="1" Canvas.Left="865" Canvas.Top="535" />
      </hhcdf:HxCanvasCtrl>
    </Grid>
    <Grid Grid.Row="1">
      <hhcdf:HxCanvasCtrl />
    </Grid>
    <Grid Grid.Row="2">
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="2">
        <hhcdf:HxButtonCtrl ClosesDialog="True" ReturnValue="2" IsCancel="True" Background="#FF232642" FontFamily="Arial" FontSize="16" Name="btnCustomDialogCancel" Width="106" Height="37.5" Margin="0,0,25,0" Opacity="1">
          <hhcdf:HxButtonCtrl.Effect>
            <DropShadowEffect ShadowDepth="3" Color="#FF000000" Opacity="0.4" BlurRadius="6" />
          </hhcdf:HxButtonCtrl.Effect>End Method</hhcdf:HxButtonCtrl>
        <hhcdf:HxButtonCtrl ClosesDialog="True" ReturnValue="4" ValidateOnClose="True" Background="#FF232642" FontFamily="Arial" FontSize="18" FontStyle="Normal" FontWeight="Bold" Name="btnCustomDialogRefresh" Width="106" Height="37.5" Margin="0,0,25,0" Opacity="1" IsEnabled="True">
          <hhcdf:HxButtonCtrl.Effect>
            <DropShadowEffect ShadowDepth="3" Color="#FF000000" Opacity="0.4" BlurRadius="6" />
          </hhcdf:HxButtonCtrl.Effect>Refresh</hhcdf:HxButtonCtrl>
        <hhcdf:HxButtonCtrl ClosesDialog="True" ReturnValue="1" ValidateOnClose="True" IsDefault="True" Background="#FF232642" FontFamily="Arial" FontSize="18" FontStyle="Normal" FontWeight="Bold" Name="btnCustomDialogOK" Width="106" Height="37.5" Margin="0,0,25,0" Opacity="1" IsEnabled="True">
          <hhcdf:HxButtonCtrl.Effect>
            <DropShadowEffect ShadowDepth="3" Color="#FF000000" Opacity="0.4" BlurRadius="6" />
          </hhcdf:HxButtonCtrl.Effect>Continue</hhcdf:HxButtonCtrl>
      </StackPanel>
      <hhcdf:HxCanvasCtrl />
    </Grid>
  </Grid>
</Window>
